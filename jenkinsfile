pipeline {
    environment {
        ecr_url = credentials('ry_ecr_url')
        registryEndpoint = 'aline-user-ry'
        THE_BUTLER_SAYS_SO = credentials('ry-aws-credentials')
        AWS_PROFILE = "ry-ecs"
        ecs_a_key = credentials('ry_access_key')
        ecs_s_key = credentials('ry_secret_access_key')
    }
    agent any
    stages {
        stage('Docker Hard Clean') {
            steps {
                sh 'docker context use default'
                sh 'sudo docker system prune -a --volumes -f'
            }
        }
        stage('ECS Context Creation') {
            steps {
                sh 'aws configure set aws_access_key_id ${ecs_a_key} --profile ${AWS_PROFILE}'
                sh 'aws configure set aws_secret_access_key_id ${ecs_s_key} --profile ${AWS_PROFILE}'
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${ecr_url}${registryEndpoint}'
                sh 'docker context create ecs ${AWS_PROFILE} --profile ${AWS_PROFILE}'
                sh 'docker context use ${AWS_PROFILE}'
            }
        }
        stage('Docker Compose Up') {
            steps {
                sh '''aws secretsmanager get-secret-value --secret-id RY-aline-environment-variables | jq -r '.["SecretString"]' | jq '.' | jq -r 'keys[] as \$k | "export \\(\$k)=\\(.[\$k])"' > .env'''
                sh '. ./.env'
                sh 'docker compose -p "RY-aline-finacial" up -d'
            }
        }
    }